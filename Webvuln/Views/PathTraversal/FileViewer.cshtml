@{
    ViewData["Title"] = "File Viewer (Path Traversal)";
}

<div class="container mt-4">
    <h2><i class="fas fa-file-alt"></i> Vulnerable File Viewer</h2>

    <!-- Vulnerable file access form -->
    <form method="get" action="/PathTraversal/ViewFile" class="mb-4">
        <div class="form-group">
            <label for="file">File to view:</label>
            <div class="input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text">uploads/</span>
                </div>
                <input type="text" class="form-control" id="file" name="file"
                       placeholder="report.txt" value="@Context.Request.Query["file"]">
            </div>
            <small class="form-text text-muted">Try navigating outside the uploads directory</small>
        </div>
        <button type="submit" class="btn btn-danger">View File</button>
    </form>

    @if (ViewBag.FileContent != null)
    {
        <div class="alert alert-warning">
            <h5>File Content:</h5>
            <div class="p-3 bg-light border rounded" style="max-height: 300px; overflow: auto;">
                <pre>@ViewBag.FileContent</pre>
            </div>
        </div>
    }

    <!-- Path Traversal Test Cases -->
    <div class="card mt-4">
        <div class="card-header bg-danger text-white">
            <i class="fas fa-exclamation-triangle"></i> Path Traversal Payloads
        </div>
        <div class="card-body">
            <ul class="list-group">
                <li class="list-group-item">
                    <strong>Windows:</strong>
                    <code>..\..\Windows\win.ini</code>
                </li>
                <li class="list-group-item">
                    <strong>Linux/Mac:</strong>
                    <code>../../etc/passwd</code>
                </li>
                <li class="list-group-item">
                    <strong>Configuration Files:</strong>
                    <code>../../../appsettings.json</code>
                </li>
                <li class="list-group-item">
                    <strong>Hidden Files:</strong>
                    <code>../../.git/config</code>
                </li>
            </ul>
        </div>
    </div>

    <!-- Security Recommendations -->
    <div class="alert alert-info mt-4">
        <h5><i class="fas fa-shield-alt"></i> Path Traversal Protection</h5>
        <ol>
            <li>Use <code>Path.GetFullPath()</code> and verify it's within allowed directory</li>
            <li>Sanitize file names by removing <code>../</code> sequences</li>
            <li>Use an allowlist of permitted characters</li>
            <li>Run application with least privileged permissions</li>
            <li>Use <code>DirectoryInfo</code> and <code>FileInfo</code> classes for safe path resolution</li>
        </ol>
        <pre class="mt-2">// Safe example
var safePath = Path.GetFullPath(Path.Combine(baseDirectory, userInput));
if (!safePath.StartsWith(baseDirectory)) {
    throw new Exception("Invalid path");
}</pre>
    </div>
</div>

@section Styles {
    <style>
        pre {
            white-space: pre-wrap;
            word-wrap: break-word;
            background: #f8f9fa;
            padding: 10px;
            border-radius: 5px;
            border: 1px solid #ddd;
        }

        .list-group-item code {
            background: #f8d7da;
            padding: 2px 5px;
            border-radius: 3px;
            color: #721c24;
        }

        .input-group-text {
            background-color: #e9ecef;
        }
    </style>
}