@{
    ViewData["Title"] = "Login Successful";
}

<div class="container mt-4">
    <div class="alert alert-success">
        <h2><i class="fas fa-unlock-alt"></i> Authentication Bypassed</h2>
        <p class="mt-3">You've successfully exploited SQL injection!</p>

        <div class="mt-4 p-3 bg-white border rounded">
            <h5>What just happened?</h5>
            <p>Your malicious input tricked the database into granting access without valid credentials.</p>

            <!-- Demonstration of vulnerable query -->
            <div class="bg-light p-3 mt-3">
                <h6>Vulnerable Query Used:</h6>
                <code>SELECT * FROM Users WHERE Username = '[your-input]' AND Password = '[your-input]'</code>
            </div>
        </div>

        <div class="mt-4">
            <a href="/SqlInjection/Search" class="btn btn-danger mr-2">
                <i class="fas fa-search"></i> Test SQL Injection Search
            </a>
            <a href="/SqlInjection/Login" class="btn btn-secondary">
                <i class="fas fa-sign-in-alt"></i> Try Another Login
            </a>
        </div>
    </div>

    <!-- Educational warning -->
    <div class="alert alert-warning mt-4">
        <h5><i class="fas fa-exclamation-triangle"></i> Security Note</h5>
        <p>This page demonstrates a successful SQL injection attack. In real applications:</p>
        <ul>
            <li>Always use parameterized queries</li>
            <li>Implement proper input validation</li>
            <li>Never concatenate user input into SQL queries</li>
        </ul>
    </div>
</div>

@section Styles {
    <style>
        code {
            background: #f8f9fa;
            padding: 2px 5px;
            border-radius: 3px;
            color: #d63384;
        }
    </style>
}